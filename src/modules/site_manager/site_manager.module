<?php

/**
 * @file
 * Primary module hooks for Site Manager module.
 */

/**
 * Act on a specific type of entity before it is created or updated.
 *
 * You can get the original entity object from $entity->original when it is an
 * update of the entity.
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 *   The entity object.
 *
 * @ingroup entity_crud
 * @see hook_entity_presave()
 */
function site_manager_site_presave(\Drupal\Core\Entity\EntityInterface $entity) {
  $global_config_items = [
    'config_overrides',
    'state_overrides'
  ];
  foreach ($global_config_items as $config_name) {
    $global_config_overrides = \Drupal::config('site_manager.settings')->get('global_' . $config_name);
    if ($global_config_overrides) {
      $global_config_overrides = \Drupal\Core\Serialization\Yaml::decode($global_config_overrides);
      $entity_config_overrides = array_merge(
        $global_config_overrides,
        (array) $entity->{$config_name}->value,
      );
      $entity->{$config_name} = $entity_config_overrides;
    }
  }

}
/**
 * Add to entity type definitions.
 *
 * Modules may implement this hook to add information to defined entity types,
 * as defined in \Drupal\Core\Entity\EntityTypeInterface.
 *
 * To alter existing information or to add information dynamically, use
 * hook_entity_type_alter().
 *
 * @param \Drupal\Core\Entity\EntityTypeInterface[] $entity_types
 *   An associative array of all entity type definitions, keyed by the entity
 *   type name. Passed by reference.
 *
 * @see \Drupal\Core\Entity\Entity
 * @see \Drupal\Core\Entity\EntityTypeInterface
 * @see hook_entity_type_alter()
 */
function site_manager_entity_type_build(array &$entity_types) {
  /** @var \Drupal\Core\Entity\EntityTypeInterface[] $entity_types */

  // Enable the site collection page.
  if (!empty($entity_types['site'])) {
//    $entity_types['site_definition']->setLinkTemplate('add-page', '/sites/add');
//    $entity_types['site_definition']->setLinkTemplate('add-form', '/sites/add');
//    $entity_types['site_definition']->setLinkTemplate('collection', '/admin/content/site_definitions');

//    // Add to Siteentity
//    $entity_types['site']->setLinkTemplate('add-page', '/site/add');
//    $entity_types['site']->setLinkTemplate('collection', '/admin/content/sites');
//
//    $entity_types['site_type']->setLinkTemplate('collection', '/admin/structure/site_types');

  }
}

/**
 * Alter site entity form to pout API key and URL in a fieldset.
 *
 * @param array $form
 * @param $form_state
 * @return void
 */
function site_manager_form_site_form_alter(array &$form, $form_state) {
    // Remote Site Connection fields.
}
