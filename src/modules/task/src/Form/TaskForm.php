<?php

namespace Drupal\task\Form;

use Drupal\Core\Entity\ContentEntityForm;
use Drupal\Core\Form\FormStateInterface;

/**
 * Form controller for the task entity edit forms.
 */
class TaskForm extends ContentEntityForm {

  public function form(array $form, FormStateInterface $form_state)
  {
    $entity_type = $this->getBundleEntity();
    // This is just for display.
    $form['command_template'] = [
      '#title' => $this->t('Command'),
      '#type' => 'item',
      'command' => [
        '#type' => 'html_tag',
        '#tag' => 'pre',
        '#value' => $entity_type->commandTemplate(),
      ],
      '#description' => $this->t('The command that will be run.'),
      '#required' => TRUE,
      '#size' => 30,
    ];
    return parent::form($form, $form_state); // TODO: Change the autogenerated stub
  }

  /**
   * {@inheritdoc}
   */
  public function save(array $form, FormStateInterface $form_state) {

    $entity = $this->getEntity();
    $entity_type = $this->getBundleEntity();

    $entity->set('command', $entity_type->commandTemplate());
    $entity->set('working_directory', $entity_type->workingDirectoryTemplate());

    $this->setEntity($entity);
    $result = parent::save($form, $form_state);
    $message_arguments = ['%label' => $entity->toLink()->toString()];
    $logger_arguments = [
      '%label' => $entity->label(),
      'link' => $entity->toLink($this->t('View'))->toString(),
    ];

    switch ($result) {
      case SAVED_NEW:
        $this->messenger()->addStatus($this->t('New task %label has been created.', $message_arguments));
        $this->logger('devshop_task')->notice('Created new task %label', $logger_arguments);
        break;

      case SAVED_UPDATED:
        $this->messenger()->addStatus($this->t('The task %label has been updated.', $message_arguments));
        $this->logger('devshop_task')->notice('Updated task %label.', $logger_arguments);
        break;
    }

    $form_state->setRedirect('entity.task.canonical', ['task' => $entity->id()]);

    return $result;
  }

}
